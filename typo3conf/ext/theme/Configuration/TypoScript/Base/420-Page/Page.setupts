page = PAGE
page {
	// Import desired FLUIDTEMPLATE
	10 < lib.fluidTemplate.default
	10 {
		variables {

		}
		settings {
			uid {
				service = {$tree.uid.menuPid.service}
				meetings = {$tree.uid.menuPid.meetings}
				social = {$tree.uid.menuPid.social}
			}
		}
	}

	//CSS files to be included
	includeCSS {

	}

	// JS files to be included in the page footer
	includeJSFooter {

	}

	// JS files to be included in <head />
	includeJS {

#		html5shiv = https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js
#		html5shiv {
#			external = 1
#			excludeFromConcatenation = 1
#			allWrap = <!--[if lt IE 9]>|<![endif]-->
#		}

	}

	bodyTagCObject = COA
	bodyTagCObject {
		stdWrap.wrap = <body id="top" class="|">

		# Add page UID
		10 = TEXT
		10 {
			value = page-{field:uid}
			insertData = 1
			noTrimWrap = || |
		}

		# Add current language
		20 = TEXT
		20 {
			value = language-{TSFE:sys_language_uid} languagecontent-{TSFE:sys_language_content}
			insertData = 1
			noTrimWrap = || |
		}

		# Add level
		25 = TEXT
		25 {
			value = level-{level:0}
			insertData = 1
			noTrimWrap = || |
		}

		# Add backend-layout
		30 = TEXT
		30 {
			wrap = tmpl-|
			data < page.10.templateName.stdWrap.cObject.data
			override.field < page.10.templateName.stdWrap.cObject.override.field
			split < page.10.templateName.stdWrap.cObject.split
			case = lower
		}

		# Add uid of optional FE-layout
		40 = TEXT
		40 {
			fieldRequired = layout
			value = layout-{field:layout}
			insertData = 1
			noTrimWrap = | ||
		}

		# Add uid of rootpage
		50 = TEXT
		50 {
			value = root-{leveluid:0}
			insertData = 1
			noTrimWrap = | ||
		}
	}

	inlineLanguageLabelFiles {
		themeFrontend = {$thm.resLang}locallang.xlf
		themeFrontend {
			// Only label keys that start with this prefix will be included (default: '')
			selectionPrefix = frontend
			// A string that will be removed from any included label key (default: '')
			stripFromSelectionName = strip_me
			// Error mode if the file could not be found: 0 - syslog entry, 1 - do nothing, 2 - throw an exception (default: 0)
			errorMode = 2
		}
	}
}
